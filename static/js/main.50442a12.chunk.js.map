{"version":3,"sources":["components/Header/index.js","components/Input/index.js","components/Counter/index.js","components/TodoList/Task.js","components/TodoList/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["HeaderC","Header","as","className","Icon","name","Input","label","newTask","changeLabel","Form","onSubmit","e","preventDefault","fluid","id","type","placeholder","value","onChange","target","Counter","props","todoNumber","conjuguaison","Task","done","onClickDone","star","onClickStar","classDone","checkDone","classLabel","checkStar","classStar","Segment","Grid","Row","Column","textAlign","floated","onClick","TodoList","tasks","concat","sort","a","b","map","task","starred","App","useState","inputLabel","setInputLabel","setTasks","undoneTask","filter","length","Container","lastId","Math","max","o","newTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sXAeeA,G,OAPC,kBACd,eAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAA1B,6BACkB,cAACC,EAAA,EAAD,CAAMC,KAAK,8B,SC0BhBC,G,OA3BD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,YAAnB,OACZ,cAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GACTA,EAAEC,iBACFL,KAHJ,SAME,cAACE,EAAA,EAAKJ,MAAN,CACEQ,OAAK,EACLC,GAAG,aACHC,KAAK,OACLC,YAAY,uBACZC,MAAOX,EACPY,SAAU,SAACP,GACTH,EAAYG,EAAEQ,OAAOF,cCAdG,G,OAfC,SAACC,GAAW,IAClBC,EAAeD,EAAfC,WACFC,EAAeD,GAAc,EAAI,WAAU,YACjD,OACE,qBAAKR,GAAG,eAAR,SACE,8BAAIQ,EAAJ,IAAiBC,EAAjB,mB,kBCgCSC,G,OApCF,SAAC,GAEP,IADLV,EACI,EADJA,GAAIR,EACA,EADAA,MAAOmB,EACP,EADOA,KAAMC,EACb,EADaA,YAAaC,EAC1B,EAD0BA,KAAMC,EAChC,EADgCA,YAE9BC,EAAYJ,EAAO,kBAAoB,OACvCK,EAAYL,EAAO,uBAAyB,iBAC5CM,EAAaN,EAAO,uBAAyB,YAC7CO,EAAYL,EAAO,QAAU,eAC7BM,EAAYN,EAAO,OAAS,GAClC,OACE,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,IAAN,CAAUlC,UAAW2B,EAArB,UACE,cAACM,EAAA,EAAKE,OAAN,CAAavB,GAAG,UAAUwB,UAAU,OAApC,SACE,sBAAMpC,UAAW6B,EAAjB,SAA8BzB,MAEhC,eAAC6B,EAAA,EAAKE,OAAN,CAAaE,QAAQ,QAAQD,UAAU,QAAQpC,UAAU,QAAzD,UACI,cAACC,EAAA,EAAD,CAAMC,KAAM4B,EAAW9B,UAAW+B,EAAWO,QAAS,kBAAMZ,EAAYd,MACxE,cAACX,EAAA,EAAD,CAAMC,KAAM0B,EAAWU,QAAS,kBAAMd,EAAYZ,kBCMjD2B,EAvBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOhB,EAAV,EAAUA,YAAaE,EAAvB,EAAuBA,YAAvB,OACf,qBAAKd,GAAG,YAAR,SAEI,GAAG6B,OAAOD,GACPE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElB,KAAOmB,EAAEnB,KAAO,GAAK,KACvCiB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpB,KAAOqB,EAAErB,KAAO,GAAK,KACvCsB,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BpB,YAAaA,EAAaF,YAAaA,EAAauB,QAASD,EAAKrB,OAArFqB,EAAKlC,UCmFxBoC,MAxFf,WAAgB,IAAD,EAEuBC,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGaF,mBAAS,CACjC,CACErC,GAAI,EACJR,MAAO,qBACPmB,MAAM,EACNE,MAAM,GAER,CACEb,GAAI,GACJR,MAAO,+BACPmB,MAAM,EACNE,MAAM,GAER,CACEb,GAAI,EACJR,MAAO,sCACPmB,MAAM,EACNE,MAAM,GAER,CACEb,GAAI,EACJR,MAAO,4BACPmB,MAAM,EACNE,MAAM,GAER,CACEb,GAAI,GACJR,MAAO,gDACPmB,MAAM,EACNE,MAAM,KAhCG,mBAGNe,EAHM,KAGCY,EAHD,KA4EPC,EAAab,EAAMc,QAAO,SAACR,GAAD,OAAWA,EAAKvB,QAAMgC,OAEtD,OACE,eAACC,EAAA,EAAD,CAAW5C,GAAG,OAAd,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOP,QA7CK,WACd,IAAMoD,EAASC,KAAKC,IAAL,MAAAD,KAAI,YAAQlB,EAAMK,KAAI,SAACe,GAAD,OAAOA,EAAEhD,QAAO,EAErDwC,EAAS,GAAD,mBAAKZ,GAAL,CAAY,CAClB5B,GAAI6C,EACJrD,MAAO8C,EACP3B,MAAM,EACNE,MAAM,MAER0B,EAAc,KAoCa/C,MAAO8C,EAAY5C,YAAa6C,IACzD,cAAC,EAAD,CAAS/B,WAAYiC,IACrB,cAAC,EAAD,CAAUb,MAAOA,EAAOhB,YAnCT,SAACZ,GAClB,IAAMiD,EAAWrB,EAAMK,KAAI,SAACC,GAC1B,OAAIA,EAAKlC,KAAOA,EACP,2BACFkC,GADL,IAEEvB,MAAOuB,EAAKvB,OAGTuB,KAGTM,EAASS,IAwB0CnC,YArBlC,SAACd,GAClB,IAAMiD,EAAWrB,EAAMK,KAAI,SAACC,GAC1B,OAAIA,EAAKlC,KAAOA,EACP,2BACFkC,GADL,IAEErB,MAAOqB,EAAKrB,OAGTqB,KAGTM,EAASS,UCvEEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50442a12.chunk.js","sourcesContent":["// == Import npm\nimport React from 'react';\nimport { Icon, Header } from 'semantic-ui-react';\n\n// == Import\nimport './style.scss';\n\n// == Composant\nconst HeaderC = () => (\n  <Header as='h1' className=\"header\">\n    Todo Reactively <Icon name=\"tachometer alternate\" />\n  </Header>\n);\n\n// == Export\nexport default HeaderC;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\n\n// == Import\nimport './style.scss';\n\n// == Composant\nconst Input = ({ label, newTask, changeLabel }) => (\n  <Form\n    onSubmit={(e) => {\n      e.preventDefault();\n      newTask();\n    }}\n  >\n    <Form.Input\n      fluid\n      id=\"todo-input\"\n      type=\"text\"\n      placeholder=\"Ajoutez une tÃ¢che\"\n      value={label}\n      onChange={(e) => {\n        changeLabel(e.target.value);\n      }}\n    />\n  </Form>\n);\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  newTask: PropTypes.func.isRequired,\n  changeLabel: PropTypes.func.isRequired,\n}\n\n// == Export\nexport default Input;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\n// == Import\nimport './style.scss';\n\n// == Composant\nconst Counter = (props) => {\n  const { todoNumber } = props;\n  const conjuguaison = todoNumber <= 1 ? 'tÃ¢che' : 'tÃ¢ches';\n  return (\n    <div id=\"todo-counter\">\n      <p>{todoNumber} {conjuguaison} en cours</p>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  todoNumber: PropTypes.number.isRequired,\n}\n\n// == Export\nexport default Counter;\n","// == Import npm\nimport React from 'react';\nimport { Grid, Segment, Icon } from 'semantic-ui-react';\n\n// == Import\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\n// == Composant\nconst Task = ({\n  id, label, done, onClickDone, star, onClickStar,\n}) => {\n  const classDone = done ? 'todo todo--done' : 'todo';\n  const checkDone = done ? 'check square outline' : 'square outline';\n  const classLabel = done ? 'todo--done todo-text' : 'todo-text';\n  const checkStar = star ? 'star ' : 'star outline';\n  const classStar = star ? 'yell' : '';\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Row className={classDone}>\n          <Grid.Column id=\"leftcol\" textAlign=\"left\">\n            <span className={classLabel}>{label}</span>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" textAlign=\"right\" className=\"maxiw\">\n              <Icon name={checkStar} className={classStar} onClick={() => onClickStar(id)} />\n              <Icon name={checkDone} onClick={() => onClickDone(id)} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\n// == PropTypes\nTask.propTypes = {\n  id: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  onClickDone: PropTypes.func.isRequired,\n  star: PropTypes.bool.isRequired,\n  onClickStar: PropTypes.func.isRequired,\n};\n\n// == Export\nexport default Task;\n","// == Import npm\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// == Import\nimport Task from './Task';\nimport './style.scss';\n\n// == Composant\nconst TodoList = ({ tasks, onClickDone, onClickStar }) => (\n  <div id=\"todo-list\">\n    {\n      [].concat(tasks)\n        .sort((a, b) => (a.star > b.star ? 2 : -2))\n        .sort((a, b) => (a.done > b.done ? 1 : -1))\n        .map((task) => <Task key={task.id} {...task} onClickStar={onClickStar} onClickDone={onClickDone} starred={task.star} />)\n    }\n  </div>\n);\nTodoList.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      done: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onClickDone: PropTypes.func.isRequired,\n  onClickStar: PropTypes.func.isRequired,\n};\n\n// == Export\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './style.scss';\n\nimport Header from '../Header';\nimport Input from '../Input';\nimport Counter from '../Counter';\nimport TodoList from '../TodoList';\n\nfunction App() {\n\n  const [inputLabel, setInputLabel] = useState('')\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      label: 'Coder une todolist',\n      done: true,\n      star: false,\n    },\n    {\n      id: 13,\n      label: 'en React de prÃ©fÃ©rence',\n      done: true,\n      star: false,\n    },\n    {\n      id: 4,\n      label: ' avec un peu de Semantic UI React ?',\n      done: true,\n      star: false,\n    },\n    {\n      id: 8,\n      label: 'Boire du cafÃ© ! â˜•',\n      done: false,\n      star: false,\n    },\n    {\n      id: 12,\n      label: 'Faire les courses : Frigo Vide ! ðŸ§Š',\n      done: false,\n      star: true,\n    },\n  ]);\n\n  const addTask = () => {\n    const lastId = Math.max(...tasks.map((o) => o.id)) + 1;\n\n    setTasks([...tasks, {\n      id: lastId,\n      label: inputLabel,\n      done: false,\n      star: false,\n    }]);\n    setInputLabel('');\n  };\n\n  const switchDone = (id) => {\n    const newTodos = tasks.map((task) => {\n      if (task.id === id) {\n        return { \n          ...task, \n          done: !task.done,\n        };\n      }\n      return task;\n    });\n\n    setTasks(newTodos);\n  }\n\n  const switchStar = (id) => {\n    const newTodos = tasks.map((task) => {\n      if (task.id === id) {\n        return { \n          ...task, \n          star: !task.star,\n        };\n      }\n      return task;\n    });\n\n    setTasks(newTodos);\n  }\n\n  const undoneTask = tasks.filter((task) => !task.done).length;\n\n  return (\n    <Container id=\"todo\">\n      <Header />\n      <Input newTask={addTask} label={inputLabel} changeLabel={setInputLabel} />\n      <Counter todoNumber={undoneTask} />\n      <TodoList tasks={tasks} onClickDone={switchDone} onClickStar={switchStar} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}